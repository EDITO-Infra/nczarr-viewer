name: Build & Deploy Documentation

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          cache: "pip"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install Python deps for docs
        run: |
          # Install minimal dependencies needed for Sphinx autodoc to work
          uv pip install sphinx sphinx-rtd-theme myst-parser
          # Install only the core dependencies needed by the modules being documented
          uv pip install dash dash-bootstrap-components xarray numpy plotly pyproj requests
          # Install the project in development mode (minimal install)
          uv pip install -e .

      - name: Setup Node.js for Marp
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli

      - name: Build Sphinx HTML docs
        working-directory: docs
        run: |
          make clean
          make html
          # Ensure Pages doesn't run Jekyll
          touch build/html/.nojekyll

      - name: Copy static files
        working-directory: docs
        run: |
          echo "Current directory: $(pwd)"
          echo "Source static exists: $(ls -la source/static/)"
          echo "Build html exists: $(ls -la build/html/)"
          if [ -d source/static ]; then
            echo "Copying static files..."
            cp -rv source/static build/html/
            echo "After copy, build/html/static contains:"
            ls -la build/html/static/
          else
            echo "source/static directory not found"
          fi

      - name: Build HTML presentation in CI
        working-directory: docs
        run: |
          echo "Building HTML presentation in CI..."
          marp source/nczarr_viewer_presentation.md --output build/html/nczarr_viewer_presentation.html --theme source/static/styles/edito-marp.css --allow-local-files
          echo "âœ… HTML presentation built successfully!"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build/html

  deploy:
    needs: build-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
